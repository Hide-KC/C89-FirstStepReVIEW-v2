={writing-book} 技術書を書くための要求

#@# NOTE author:mhidaka

技術書は知識を体系的にまとめ読者の興味関心を誘引する、もっともポピュラーな手段です。
一方で執筆環境については独自のノウハウがあり、統一したものが存在していませんでした。
本章では、TechBoosterがお勧めするエンジニア向けの執筆スタイルを紹介します。
自然言語による文章もプログラミング言語を書くのと大差ないな！と思っていただければ幸いです。

== Re:VIEWとは

#@# NOTE author:mhidaka

長らくの期間、書籍制作は手作業が多く専門知識を必要とした領域でした。
しかし文章をソースコードのように管理し、書籍に変換できるRe:VIEW（レビュー）を使えば
ずっと手軽に技術書を作れます。

Re:VIEWは書籍制作のためのツールセットです。本を作る工程のうち（図をいれる）
次のような役割を持ちます（@<img>{review-cover}）。

//image[review-cover][Re:VIEWがカバーする領域]{
//}


TechBoosterではRe:VIEWを使うことで効率的に文書管理、執筆環境を構築できるようになりました@<fn>{products}。

//footnote[products][制作する書籍は年間8冊（述べ1000ページ超）を数えます。ヤバすぎ]

=={requirement} 本を作るための技術的要求

#@# NOTE author:vvakame

技術書を書くためにあるとよい機能を挙げていきます。

 * 文書の共有とリビジョン管理がしやすい

プログラムのソースコードと同様に文書もリビジョン管理があると便利です。
いつ誰がどう変更したかを追跡できたり、どのくらいの分量を書いたかが分かるのは想像以上のメリットです。
いらないのではないか？と思った節をバッサリ削ったり、いやいややっぱり戻そう…と考えなおし元に戻したり、自由自在です。

 * GitHubとの親和性がよい

原稿についてもpull requestを使って改善の提案やレビューを受け取ることができるのは便利です。
人の原稿に直接手を加えるのには文責の在り処が曖昧になるなど問題もありますが、pull requestであれば筆者によるレビューが必ず行われるため、コントリビュートしやすさにつながります。
同じブランチで作業した場合にありがちな編集の競合を防ぐことができるため、筆者はいつでもpushしたい時に原稿をpushできるようになります。
原稿を少し書いて、pushしようとするたびにconflictしたりするとやる気が乱れてしまいますからね。
また、Travis CIやCircle CI、その他Re:VIEW専用CIなど、GitHubのためは数多く存在し、それらを利用できるのも嬉しいところです。

 * コメントを利用できる

コメントへはメモを書き残したり、他人の原稿にレビューを書き込む時に使います。
たとえばIssueに@<code>{原稿の○行目に対する指摘 > わかる→分かる に置き換え}といちいち書くのは、書くのも苦行付きあわせて直すのも苦行、と不便です。
原稿とレビュー結果を別々の場所に置くべきではありません。
レビュー結果はコメントを使い原稿にインラインに書き込んでいくと楽です。

 * HTMLやPDF、epubなど複数の形式に変換できる

文章を書いた後、Webサイトとして公開したい場合、印刷所に入稿したい場合、電子書籍として配布したい場合などさまざまなシチュエーションがあります。
そのため、任意の形式に変換できるものがよいでしょう。

 * 文書の構造自体と見た目（スタイル）についての設定が分離されている

GUIツールにありがちですが、文書構造自体の質がツールを使う人の練度に左右される場合があります。
たとえば、章タイトルの文字を大きくしたい時を考えます。
該当行を見出しという文書構造だと設定しそのスタイルを適用する方法と、文字を単に大きく太く装飾する方法は構造としては全く違います。
両者を比べると見た目としては変わりがないため、単に文字を大きく装飾して終わってしまう人がいます。
前者のやり方であれば、見出しのスタイルを一括で変更したり、目次を生成したりすることができるというのに！
後者のやり方は使わないでね！と伝えて済む場合もありますが、それよりも根本的に構造とスタイルが分離されているツールを使うほうが楽です。

さて、まとめにかかります。
世の中にはRe:VIEWを始め、Microsoft WordやMarkdown、textile、reStructuredText、AsciiDoc、LaTeX、Sphinxなどさまざまな形式があります。
この中から、前述の条件にマッチしないものは避けたほうがよいでしょう。

== TechBoosterがRe:VIEWを勧める理由

まず第一に、@<hd>{requirement}に述べた理由をすべて満たすからです。

そして第二に、Re:VIEWは出版を生業としている方々が作っているため本を書くための考慮や工夫が最初から詰まっているからです。

第三に、今までたくさんの本の製作に使われてきた実績@<fn>{archievement}があるため、そうそう落とし穴に落ちたりすることもないからです。
日本人が作っているツールだけあり、日本固有の事情も考慮されています。
私達はRe:VIEWを使うだけで先人たちの知恵を活用することができます。

//footnote[archievement][Re:VIEWの利用実績 @<href>{https://github.com/kmuto/review/wiki/%E5%88%A9%E7%94%A8%E5%AE%9F%E7%B8%BE}]
